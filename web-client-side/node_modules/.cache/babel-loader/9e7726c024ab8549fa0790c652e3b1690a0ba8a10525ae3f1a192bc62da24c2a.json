{"ast":null,"code":"var _jsxFileName = \"/media/prashikbhimte29/HMS/web-client-side/src/Components/BookAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./BookAppointment.css\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookAppointment() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [doctors, setDoctors] = useState([]);\n  const [selctedDoctor, setSelectedDocctor] = useState();\n  const [doctorDetails, setDoctorDetails] = useState([]);\n  const [year, setYear] = useState('2024');\n  const [month, setMonth] = useState('01');\n  const [day, setDay] = useState('01');\n  const years = [];\n  for (let year = 2024; year <= 2024; year++) {\n    years.push(year);\n  }\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const days = [];\n  for (let day = 1; day <= 31; day++) {\n    days.push(day);\n  }\n  const months_value = {\n    'Jan': \"01\",\n    \"Feb\": \"02\",\n    \"Mar\": \"03\",\n    \"Apr\": \"04\",\n    \"May\": \"05\",\n    \"Jun\": \"06\",\n    \"Jul\": \"07\",\n    \"Aug\": \"08\",\n    \"Sep\": \"09\",\n    \"Oct\": \"10\",\n    \"Nov\": \"11\",\n    \"Dec\": \"12\"\n  };\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/doctor/all', {\n          method: \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const responce_data = await responce.json();\n        const x = [];\n        x.push(responce_data.map(key => {\n          return key['name'];\n        }));\n        setDoctors(x);\n        setDoctorDetails(responce_data);\n        setSelectedDocctor(x[0]);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllDoctors();\n  }, [userId]);\n  const changeDoctorname = event => {\n    setSelectedDocctor(event.target.value);\n  };\n  const changeYear = event => {\n    setYear(event.target.value);\n  };\n  const changeMonth = event => {\n    setMonth(event.target.value);\n  };\n  const changeDay = event => {\n    setDay(event.target.value);\n  };\n  const fetchSlots = async () => {\n    let doc_id = 0;\n    doctorDetails.map(key => {\n      if (key['name'] == selctedDoctor) {\n        doc_id = key['id'];\n      }\n    });\n    try {\n      const responce = await fetch('http://localhost:5000/patient/view/availableslots', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"date\": year + month + day,\n          \"doc_id\": doc_id\n        })\n      });\n      const responce_data = await responce.json();\n      console.log(responce_data['available_slots']);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bookappointment\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Doctor :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: changeDoctorname,\n        value: selctedDoctor,\n        children: doctors.map(doctor => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: doctor,\n            children: doctor\n          }, doctor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 46\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date :\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: year,\n          onChange: changeYear,\n          children: years.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: changeMonth,\n          children: months.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 49\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: day,\n          onChange: changeDay,\n          children: days.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 47\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSlots,\n      children: \"Fetch All Time Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"i5gIkJBzaOBfcdqLf9gq0kfYQ+U=\", false, function () {\n  return [useParams];\n});\n_c = BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","BookAppointment","_s","userId","doctors","setDoctors","selctedDoctor","setSelectedDocctor","doctorDetails","setDoctorDetails","year","setYear","month","setMonth","day","setDay","years","push","months","days","months_value","fetchAllDoctors","responce","fetch","method","headers","responce_data","json","x","map","key","error","console","log","changeDoctorname","event","target","value","changeYear","changeMonth","changeDay","fetchSlots","doc_id","body","JSON","stringify","id","children","onChange","doctor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/media/prashikbhimte29/HMS/web-client-side/src/Components/BookAppointment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./BookAppointment.css\";\nimport { useParams } from 'react-router-dom';\n\nexport default function BookAppointment() {\n\n  const { userId } = useParams();\n\n  const [ doctors, setDoctors ] = useState([]);\n  const [ selctedDoctor, setSelectedDocctor ] = useState();\n  const [ doctorDetails, setDoctorDetails ] = useState([]);\n\n  const [ year, setYear ] = useState('2024');\n  const [ month, setMonth ] = useState('01');\n  const [ day, setDay ] = useState('01');\n\n  const years = [];\n    for (let year = 2024; year <= 2024; year++) {\n        years.push(year);\n    }\n    const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const days = [];\n    for (let day = 1; day <=31; day++) {\n        days.push(day);\n    }\n\n  const months_value = {\n    'Jan' : \"01\",\n    \"Feb\" : \"02\",\n    \"Mar\" : \"03\",\n    \"Apr\" : \"04\",\n    \"May\" : \"05\",\n    \"Jun\" : \"06\",\n    \"Jul\" : \"07\",\n    \"Aug\" : \"08\",\n    \"Sep\" : \"09\",\n    \"Oct\" : \"10\",\n    \"Nov\" : \"11\",\n    \"Dec\" : \"12\"\n}\n  \n\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/doctor/all', {\n          method : \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const responce_data = await responce.json();\n        const x = [];\n        x.push(responce_data.map((key) => {return key['name']}));\n        setDoctors(x);\n        setDoctorDetails(responce_data);\n        setSelectedDocctor(x[0]);\n      }\n      catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchAllDoctors();\n  }, [userId]);\n\n  const changeDoctorname = (event) => {\n      setSelectedDocctor(event.target.value);\n  }\n\n  const changeYear = (event) => {\n    setYear(event.target.value);\n  }\n  const changeMonth = (event) => {\n      setMonth(event.target.value);\n  }\n  const changeDay = (event) => {\n      setDay(event.target.value);\n  }\n\n  const fetchSlots = async () => {\n    let doc_id = 0;\n    doctorDetails.map((key) => {\n      if (key['name'] == selctedDoctor) {\n        doc_id = key['id'];\n      }\n    })\n\n    try {\n      const responce = await fetch('http://localhost:5000/patient/view/availableslots', {\n        method : \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body : JSON.stringify({\n          \"date\" : year + month + day,\n          \"doc_id\" : doc_id\n        })\n      });\n\n      const responce_data = await responce.json();\n      console.log(responce_data['available_slots']);\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div id='bookappointment'>\n        <label>Doctor : \n          <select onChange={changeDoctorname} value={selctedDoctor}>\n            {doctors.map((doctor) => {return <option key={doctor} value={doctor}>{doctor}</option>})}\n          </select>\n        </label>\n        <label>\n          Date : \n          <div>\n              <select value={year} onChange={changeYear}>\n                  {years.map((key) => { return <option  value={key}>{key}</option> })}\n              </select>\n              <select value={month} onChange={changeMonth}>\n                  {months.map((key) => { return <option value={key}>{key}</option> })}\n              </select>\n              <select value={day} onChange={changeDay}>\n                  {days.map((key) => { return <option value={key}>{key}</option> })}\n              </select>\n          </div>\n        </label>\n        <button onClick={fetchSlots} >Fetch All Time Slots</button>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}