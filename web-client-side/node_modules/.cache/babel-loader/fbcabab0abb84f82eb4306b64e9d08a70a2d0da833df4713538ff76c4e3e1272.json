{"ast":null,"code":"var _jsxFileName = \"/media/prashikbhimte29/HMS/web-client-side/src/Components/BookAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./BookAppointment.css\";\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookAppointment() {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [doctors, setDoctors] = useState([]);\n  const [selctedDoctor, setSelectedDocctor] = useState();\n  const [doctorDetails, setDoctorDetails] = useState([]);\n  const [year, setYear] = useState();\n  const [month, setMonth] = useState();\n  const [day, setDay] = useState();\n  const years = [];\n  for (let year = 2024; year <= 2024; year++) {\n    years.push(year);\n  }\n  const months = [];\n  for (let month = 1; month <= 12; month++) {\n    months.push(month);\n  }\n  const days = [];\n  for (let day = 1; day <= 31; day++) {\n    days.push(day);\n  }\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/doctor/all', {\n          method: \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        const responce_data = await responce.json();\n        const x = [];\n        x.push(responce_data.map(key => {\n          return key['name'];\n        }));\n        setDoctors(x);\n        setDoctorDetails(responce_data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllDoctors();\n  }, [userId]);\n  const changeDoctorname = event => {\n    setSelectedDocctor(event.target.value);\n  };\n  const changeYear = event => {\n    setYear(event.target.value);\n  };\n  const changeMonth = event => {\n    setMonth(event.target.value);\n  };\n  const changeDay = event => {\n    setDay(event.target.value);\n  };\n  const fetchSlots = async () => {\n    let doc_id = 0;\n    doctorDetails.map(key => {\n      console.log(key);\n      console.log;\n      if (key['name'] == selctedDoctor) {\n        doc_id = key['id'];\n      }\n    });\n    try {\n      const responce = await fetch('http://localhost:5000/patient/view/availableslots', {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"date\": year + month + day,\n          \"doc_id\": doc_id\n        })\n      });\n      const responce_data = await responce.json();\n      console.log(responce_data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"bookappointment\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Doctor :\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: changeDoctorname,\n        value: selctedDoctor,\n        children: doctors.map(doctor => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: doctor,\n            children: doctor\n          }, doctor, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 46\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Date :\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: year,\n          onChange: changeYear,\n          children: years.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 48\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: month,\n          onChange: changeMonth,\n          children: months.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 49\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: day,\n          onChange: changeDay,\n          children: days.map(key => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: key,\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 47\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSlots,\n      children: \"Fetch All Time Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"3Ikjsb31e5dKgJi1zqgNgBMyXu8=\", false, function () {\n  return [useParams];\n});\n_c = BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","BookAppointment","_s","userId","doctors","setDoctors","selctedDoctor","setSelectedDocctor","doctorDetails","setDoctorDetails","year","setYear","month","setMonth","day","setDay","years","push","months","days","fetchAllDoctors","responce","fetch","method","headers","responce_data","json","x","map","key","error","console","log","changeDoctorname","event","target","value","changeYear","changeMonth","changeDay","fetchSlots","doc_id","body","JSON","stringify","id","children","onChange","doctor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/media/prashikbhimte29/HMS/web-client-side/src/Components/BookAppointment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./BookAppointment.css\";\nimport { useParams } from 'react-router-dom';\n\nexport default function BookAppointment() {\n\n  const { userId } = useParams();\n\n  const [ doctors, setDoctors ] = useState([]);\n  const [ selctedDoctor, setSelectedDocctor ] = useState();\n  const [ doctorDetails, setDoctorDetails ] = useState([]);\n\n  const [ year, setYear ] = useState();\n  const [ month, setMonth ] = useState()\n  const [ day, setDay ] = useState();\n\n  const years = [];\n  for (let year = 2024; year <= 2024; year++) {\n      years.push(year);\n  }\n  const months = [];\n  for (let month = 1; month <=12; month++) {\n    months.push(month);\n}\n  const days = [];\n  for (let day = 1; day <=31; day++) {\n      days.push(day);\n  }\n  \n\n  useEffect(() => {\n    const fetchAllDoctors = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/doctor/all', {\n          method : \"GET\",\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n\n        const responce_data = await responce.json();\n        const x = [];\n        x.push(responce_data.map((key) => {return key['name']}));\n        setDoctors(x);\n        setDoctorDetails(responce_data);\n      }\n      catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchAllDoctors();\n  }, [userId]);\n\n  const changeDoctorname = (event) => {\n      setSelectedDocctor(event.target.value);\n  }\n\n  const changeYear = (event) => {\n    setYear(event.target.value);\n  }\n  const changeMonth = (event) => {\n      setMonth(event.target.value);\n  }\n  const changeDay = (event) => {\n      setDay(event.target.value);\n  }\n\n  const fetchSlots = async () => {\n    let doc_id = 0;\n    doctorDetails.map((key) => {\n      console.log(key)\n      console.log\n      if (key['name'] == selctedDoctor) {\n        doc_id = key['id'];\n      }\n    })\n\n    try {\n      const responce = await fetch('http://localhost:5000/patient/view/availableslots', {\n        method : \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body : JSON.stringify({\n          \"date\" : year + month + day,\n          \"doc_id\" : doc_id\n        })\n      });\n\n      const responce_data = await responce.json();\n      console.log(responce_data)\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <div id='bookappointment'>\n        <label>Doctor : \n          <select onChange={changeDoctorname} value={selctedDoctor}>\n            {doctors.map((doctor) => {return <option key={doctor} value={doctor}>{doctor}</option>})}\n          </select>\n        </label>\n        <label>\n          Date : \n          <div>\n              <select value={year} onChange={changeYear}>\n                  {years.map((key) => { return <option  value={key}>{key}</option> })}\n              </select>\n              <select value={month} onChange={changeMonth}>\n                  {months.map((key) => { return <option value={key}>{key}</option> })}\n              </select>\n              <select value={day} onChange={changeDay}>\n                  {days.map((key) => { return <option value={key}>{key}</option> })}\n              </select>\n          </div>\n        </label>\n        <button onClick={fetchSlots} >Fetch All Time Slots</button>\n    </div>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}