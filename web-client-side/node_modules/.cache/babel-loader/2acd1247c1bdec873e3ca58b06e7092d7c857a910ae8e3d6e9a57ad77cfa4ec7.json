{"ast":null,"code":"var _jsxFileName = \"/media/prashikbhimte29/HMS/web-client-side/src/Components/CancelAppointment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./CancelAppointment.css\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport UseNav from \"./UserNav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CancelAppointment() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState();\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState();\n  useEffect(() => {\n    const fetchAllAppointment = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/patient/view/appointment/cancel', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"pat_id\": userId\n          })\n        });\n        const responce_data = await responce.json();\n        setDates([...new Set(responce_data.map(key => {\n          return key['date'];\n        }))]);\n        setAppointmentDetails(responce_data);\n        setSelectedDate(responce_data[0]['date']);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchAllAppointment();\n  }, [userId]);\n  useEffect(() => {\n    let slots = [];\n    appointmentDetails.map(key => {\n      if (key['date'] === selectedDate) {\n        slots.push(key['time_slot']);\n      }\n      return 0;\n    });\n    setSlots(slots);\n    setSelectedSlot(slots[0]);\n  }, [selectedDate, appointmentDetails]);\n  const onChangeDate = event => {\n    setSelectedDate(event.target.value);\n  };\n  const onChangeSlot = event => {\n    setSelectedSlot(event.target.value);\n  };\n  const cancelAppointment = async () => {\n    let app_id = 0;\n    appointmentDetails.map(key => {\n      if (key['date'] === selectedDate) {\n        if (key['time_slot'] === selectedSlot) {\n          app_id = key['app_id'];\n        }\n      }\n      return 0;\n    });\n    try {\n      const responce = await fetch('http://localhost:5000/patient/appiontment/cancel', {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"app_id\": app_id\n        })\n      });\n      const responce_data = responce.json();\n      console.log(responce_data['status']);\n      alert(\"Appointment is Canceled\");\n      navigate(`/users/${userId}`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center_div\",\n      children: [dates.length !== 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Date :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChangeDate,\n          value: selectedDate,\n          children: dates.map(date => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: date,\n              children: date\n            }, date, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 43\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 20\n      }, this), slots.length !== 0 ? /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Time Slot :\", /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: onChangeSlot,\n          value: selectedSlot,\n          children: slots.map(slot => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              value: slot,\n              children: slot\n            }, slot, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 43\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"No data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelAppointment,\n        children: \"Cancel Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(CancelAppointment, \"pRwl5S/c4tPurLMGJn7ATNhMYqs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = CancelAppointment;\nvar _c;\n$RefreshReg$(_c, \"CancelAppointment\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","UseNav","jsxDEV","_jsxDEV","CancelAppointment","_s","navigate","userId","dates","setDates","selectedDate","setSelectedDate","appointmentDetails","setAppointmentDetails","slots","setSlots","selectedSlot","setSelectedSlot","fetchAllAppointment","responce","fetch","method","headers","body","JSON","stringify","responce_data","json","Set","map","key","error","console","log","push","onChangeDate","event","target","value","onChangeSlot","cancelAppointment","app_id","alert","children","className","length","onChange","date","fileName","_jsxFileName","lineNumber","columnNumber","slot","onClick","_c","$RefreshReg$"],"sources":["/media/prashikbhimte29/HMS/web-client-side/src/Components/CancelAppointment.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./CancelAppointment.css\";\nimport { useNavigate, useParams } from 'react-router-dom';\nimport UseNav from \"./UserNav\";\n\nexport default function CancelAppointment() {\n\n  const navigate = useNavigate();\n\n  const { userId } = useParams();\n\n  const [dates, setDates] = useState([]);\n  const [selectedDate, setSelectedDate] = useState();\n  const [appointmentDetails, setAppointmentDetails] = useState([]);\n  const [slots, setSlots] = useState([]);\n  const [selectedSlot, setSelectedSlot] = useState();\n\n  useEffect(() => {\n    const fetchAllAppointment = async () => {\n      try {\n        const responce = await fetch('http://localhost:5000/patient/view/appointment/cancel', {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"pat_id\": userId\n          })\n        });\n\n        const responce_data = await responce.json();\n        setDates([...new Set(responce_data.map((key) => { return key['date'] }))]);\n        setAppointmentDetails(responce_data);\n        setSelectedDate(responce_data[0]['date']);\n      }\n      catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchAllAppointment();\n  }, [userId]);\n\n  useEffect(() => {\n    let slots = [];\n    appointmentDetails.map((key) => {\n      if (key['date'] === selectedDate) {\n        slots.push(key['time_slot']);\n      }\n      return 0;\n    });\n    setSlots(slots);\n    setSelectedSlot(slots[0]);\n  }, [selectedDate, appointmentDetails]);\n\n  const onChangeDate = (event) => {\n    setSelectedDate(event.target.value);\n  }\n\n  const onChangeSlot = (event) => {\n    setSelectedSlot(event.target.value);\n  }\n\n  const cancelAppointment = async () => {\n    let app_id = 0;\n    appointmentDetails.map((key) => {\n      if (key['date'] === selectedDate) {\n        if (key['time_slot'] === selectedSlot) {\n          app_id = key['app_id']\n        }\n      }\n      return 0;\n    });\n\n    try {\n      const responce = await fetch('http://localhost:5000/patient/appiontment/cancel', {\n        method: \"DELETE\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"app_id\": app_id\n        })\n      });\n\n      const responce_data = responce.json();\n\n      console.log(responce_data['status']);\n\n      alert(\"Appointment is Canceled\");\n      navigate(`/users/${userId}`);\n    }\n    catch (error) {\n      console.log(error)\n    }\n  }\n\n  return (\n    <section>\n      <div className='center_div'>\n        {dates.length !== 0 ? <label>Date :\n          <select onChange={onChangeDate} value={selectedDate}>\n            {dates.map((date) => { return <option key={date} value={date}>{date}</option> })}\n          </select>\n        </label> : <h1>No data</h1>}\n        {slots.length !== 0 ? <label>Time Slot :\n          <select onChange={onChangeSlot} value={selectedSlot}>\n            {slots.map((slot) => { return <option key={slot} value={slot}>{slot}</option> })}\n          </select>\n        </label> : <h1>No data</h1>}\n        <button onClick={cancelAppointment}>Cancel Appointment</button>\n      </div>\n    </section>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}